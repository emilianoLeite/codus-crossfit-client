import { buildClientSchema, GraphQLError, IntrospectionQuery} from "graphql";
import { addMockFunctionsToSchema } from "graphql-tools";
import introspectionResult from "../schema.json";

const schema = buildClientSchema((introspectionResult as unknown) as IntrospectionQuery);

// Add mocks, modifies schema in place
addMockFunctionsToSchema({
  mocks: {
    DateTime: () => new Date("2019-02-20"),
    Mutation: () => ({
      createChallenge: (obj: any, { title }: any) => {
        if (title === "") {
          throw new GraphQLError("Title cannot be blank");
        } else {
          return {}; // All fields are generated by mock
        }
      },
      login: (obj: any, { password }: { password: string }) => {
        if (password === "123") {
          throw new GraphQLError("login failed");
        } else {
          return {
            jwt: "JWT Token 2133214214",
          };
        }
      },
    }),
  },
  schema,
});

export default schema;
